apiVersion: v1
kind: Namespace
metadata:
  name: tokamak-rl
  labels:
    app: tokamak-rl-control-suite
    environment: production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tokamak-rl-config
  namespace: tokamak-rl
data:
  tokamak_config: "ITER"
  control_frequency: "100"
  safety_factor: "1.2"
  log_level: "INFO"
  enable_monitoring: "true"
  enable_safety: "true"
---
apiVersion: v1
kind: Secret
metadata:
  name: tokamak-rl-secrets
  namespace: tokamak-rl
type: Opaque
data:
  database_url: ""  # Base64 encoded
  api_key: ""       # Base64 encoded
  jwt_secret: ""    # Base64 encoded
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tokamak-rl-staging
  namespace: tokamak-rl
  labels:
    app: tokamak-rl
    environment: staging
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tokamak-rl
      environment: staging
  template:
    metadata:
      labels:
        app: tokamak-rl
        environment: staging
    spec:
      containers:
      - name: tokamak-rl
        image: tokamak-rl:staging
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 6006
          name: tensorboard
        resources:
          requests:
            memory: "8Gi"
            cpu: "4"
          limits:
            memory: "8Gi"
            cpu: "4"
            nvidia.com/gpu: 1
        env:
        - name: ENVIRONMENT
          value: "staging"
        - name: TOKAMAK_CONFIG
          valueFrom:
            configMapKeyRef:
              name: tokamak-rl-config
              key: tokamak_config
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: tokamak-rl-secrets
              key: database_url
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: tokamak-rl-data-staging
      - name: logs-volume
        persistentVolumeClaim:
          claimName: tokamak-rl-logs-staging
---
apiVersion: v1
kind: Service
metadata:
  name: tokamak-rl-service-staging
  namespace: tokamak-rl
  labels:
    app: tokamak-rl
    environment: staging
spec:
  selector:
    app: tokamak-rl
    environment: staging
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: tensorboard
    port: 6006
    targetPort: 6006
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tokamak-rl-data-staging
  namespace: tokamak-rl
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tokamak-rl-logs-staging
  namespace: tokamak-rl
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
